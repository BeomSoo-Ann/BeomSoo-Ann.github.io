I"H'<blockquote>
  <p>조금 더 복잡한 데이터를 파이썬 코드를 통해 처리해보자!
저번 실습에서는 FITS 파일의 데이터를 이미지화했다면, 이번에는 txt 파일의 데이터를 <strong>그래프화</strong> 해보자.</p>
</blockquote>

<h2 id="1-개요">1. 개요</h2>

<p><a href="https://cdaweb.gsfc.nasa.gov"><strong>NASA GSFC</strong></a>(Goddard Space Flight Center)에서 <strong>Voyager 1</strong>이 전송한 Distance, Magnetic field, Proton Flux data를 받아 파이썬 코드를 통해 그래프로 출력해보자.
이를 통해 Voyager 1이 태양권계면을 통과한 시점을 추측해보자.</p>

<h2 id="2-modules">2. Modules</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">datetime</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
</code></pre></div></div>

<ul>
  <li><strong>datetime</strong>: 날짜, 시간 자료를 처리해주는 모듈</li>
  <li><strong>numpy</strong>: 배열을 생성하고, 배열의 연산을 수행하는 모듈</li>
  <li><strong>matplotlib</strong>: 데이터를 시각화해주는 모듈
    <ul>
      <li><strong>pyplot</strong>: 그래프를 그리는 모듈</li>
    </ul>
  </li>
</ul>

<h2 id="3-데이터-처리">3. 데이터 처리</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">file</span> <span class="o">=</span> <span class="s">'데이터 주소/데이터 이름.txt'</span>
<span class="n">full_text</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="nb">file</span><span class="p">,</span> <span class="s">'r'</span><span class="p">)</span>
</code></pre></div></div>

<p>위의 코드를 통해 텍스트 파일을 읽을 것이다. FITS와 다르게 txt는 여러 분야에서 흔히 사용하기 때문에 python 내장 함수인 open으로도 충분히 읽어올 수 있다.</p>

<p>데이터의 구조는 다음과 같다.</p>

<p><img src="/assets/images/astro_day2.png" alt="" class="align" />
이 파일에서 우리는 date, time, distance, magnetic, proton data를 분리할 것이다.</p>

<p>이 데이터들을 분리하려면 먼저 데이터를 제외한 정보들을 제거해야한다. 이후 각 행을 한 줄씩 읽으면서 각 열의 데이터를 각각 다른 array로 저장하면 된다.
읽어야 할 데이터의 양이 많으니 while문으로 무한 루프를 만든 후 특정 조건에 루프를 벗어나도록 하자.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 각 데이터를 담을 list를 선언해준다.
</span><span class="n">date</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">time</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">distance</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">magnetic</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">proton</span> <span class="o">=</span> <span class="p">[]</span>

<span class="n">n</span> <span class="o">=</span> <span class="mi">0</span>   <span class="c1"># 데이터의 행을 구분해주기 위한 변수 n
</span>
<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
  <span class="n">line</span> <span class="o">=</span> <span class="n">full_text</span><span class="p">.</span><span class="n">readline</span><span class="p">()</span>   <span class="c1"># 행을 한 줄씩 불러온다.
</span>
  <span class="k">if</span> <span class="ow">not</span> <span class="n">line</span><span class="p">:</span>   <span class="c1"># 불러올 행이 없는 경우 루프를 break한다.
</span>    <span class="k">break</span>
  <span class="k">if</span> <span class="s">'#'</span> <span class="ow">in</span> <span class="n">line</span><span class="p">:</span>   <span class="c1"># '#'이 들어간 행은 데이터가 없는 행이므로 continue한다.
</span>    <span class="k">continue</span>

  <span class="n">n</span> <span class="o">+=</span> <span class="mi">1</span>
  <span class="n">columns</span> <span class="o">=</span> <span class="n">line</span><span class="p">.</span><span class="n">split</span><span class="p">()</span>   <span class="c1"># 각 행의 데이터는 space로 구분되어있기 때문에 split해준다.
</span>
  <span class="k">if</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>   <span class="c1"># 첫 줄은 데이터의 정보가 담겨있다. header로 분류해준다.
</span>    <span class="n">header</span> <span class="o">=</span> <span class="n">columns</span>
    <span class="k">continue</span>
  <span class="k">if</span> <span class="n">n</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>   <span class="c1"># 둘째 줄은 데이터의 단위가 담겨있다. units로 분류해준다.
</span>    <span class="n">units</span> <span class="o">=</span> <span class="n">columns</span>
    <span class="k">continue</span>
  <span class="c1"># 데이터들 중 크기가 너무 작은 데이터가 존재하는 경우가 있다.
</span>  <span class="c1"># 이는 관측기기가 관측을 하지 않았거나 하지 못한 경우이므로 제외해주자.
</span>  <span class="k">if</span> <span class="nb">float</span><span class="p">(</span><span class="n">columns</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span> <span class="o">&lt;=</span> <span class="o">-</span><span class="mf">1e30</span> <span class="ow">and</span> <span class="nb">float</span><span class="p">(</span><span class="n">columns</span><span class="p">[</span><span class="mi">4</span><span class="p">])</span> <span class="o">&lt;=</span> <span class="o">-</span><span class="mf">1e30</span><span class="p">:</span>
    <span class="k">continue</span>

  <span class="c1"># 예외사항을 모두 제거하고 남은 데이터들을 각 list에 저장해주자.
</span>  <span class="n">date</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">columns</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
  <span class="n">time</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">columns</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
  <span class="n">distance</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">columns</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
  <span class="n">magnetic</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">columns</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span>
  <span class="n">proton</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">columns</span><span class="p">[</span><span class="mi">4</span><span class="p">])</span>

<span class="c1"># 분류한 데이터들을 처리하기 쉽게 array로 바꿔준다.
</span><span class="n">distance</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">distance</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="nb">float</span><span class="p">)</span>
<span class="n">magnetic</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">magnetic</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="nb">float</span><span class="p">)</span>
<span class="n">proton</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">asarray</span><span class="p">(</span><span class="n">proton</span><span class="p">,</span> <span class="n">dtype</span><span class="o">=</span><span class="nb">float</span><span class="p">)</span>
</code></pre></div></div>

<blockquote>
  <p>원래 실습 코드는 if문 아래에 또 if문 넣고, 그 밑에 또 if문 들어가고 자꾸 반복되길래 예외 조건만 꺼내서 continue하게 만들어 깔끔하게 정리해봤다.
글로 설명하기에는 너무 장황해져서 각 코드에 주석을 달아 설명을 줄이도록 하겠다.</p>
</blockquote>

<ul>
  <li><strong>array()와 asarray()의 차이점</strong><br />
array(): 데이터의 중복 여부와 상관없이 array를 만들어준다.<br />
asarray(): 데이터가 다를 경우에만 copy를 한다.</li>
</ul>

<p>데이터를 모두 분류했으니, 분류한 데이터로 그래프를 그려보자!</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">x_data</span> <span class="o">=</span> <span class="n">distance</span>
<span class="n">y_data</span> <span class="o">=</span> <span class="n">magnetic</span>

<span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">16</span><span class="p">,</span> <span class="mi">8</span><span class="p">))</span>
<span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x_data</span><span class="p">,</span> <span class="n">y_data</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>
:ET