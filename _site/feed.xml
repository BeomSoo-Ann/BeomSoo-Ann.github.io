<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-05-16T16:27:01+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Code My Cosmos</title><subtitle>코딩 공부하다 천문학에 빠져버린 초보 개발자</subtitle><author><name>BeomRam</name></author><entry><title type="html">유럽 여행 - 런던 PART1</title><link href="http://localhost:4000/travel/London/" rel="alternate" type="text/html" title="유럽 여행 - 런던 PART1" /><published>2022-05-11T00:00:00+09:00</published><updated>2022-05-11T00:00:00+09:00</updated><id>http://localhost:4000/travel/London</id><content type="html" xml:base="http://localhost:4000/travel/London/"><![CDATA[<blockquote>
  <p>2022년 드디어 <strong>코로나</strong>가 끝을 보이기 시작했다. 그리고 나의 공익 생활도 끝이 보이기 시작했다..!
복무가 끝나면 가장 먼저 하고 싶은 것이 여행이다. 연말 여행을 떠나기 전에 20년도 떠났던 <strong>유럽 여행</strong>을 되돌아보려고 한다.</p>
</blockquote>

<h2 id="시작">시작</h2>

<p>19년도 2학기는 개인적으로 힘든 일이 너무 많았다. 자취방에서 술과 함께 나뒹굴다가 갑자기 결단을 내렸다.
이렇게 살면 안되겠다 싶어 학교를 중도휴학 해버렸다. 그리고 환불받은 등록금으로 무작정 런던행 티켓을 구매했다.
이 여행은 그렇게 시작되었다.</p>

<p><strong>2020년 2월 5일</strong>, 생각없이 즉흥적으로 정한, 현실에서 도망가는 날이었다.</p>

<h2 id="무계획">무계획</h2>

<p>19년 2학기 중간이 끝나고, 11월 초 즘 중도 휴학을 했으니 나에게는 약 3개월이 남아있었다. 아무런 생각도 없었다.
1월이 되고 약 한달정도 남으니 슬슬 계획을 세워야겠다는 생각이 들기 시작했다.</p>

<p>일단 런던에 가는 비행기를 구했으니, 런던에 숙소를 잡았다. 2주동안 런던에만 있으면 심심할 것 같아 한 주는 다른 나라로 가기로 결정했다.
갑자기 스페인이 떠올랐다. 무작정 런던-바르셀로나 비행기 티켓을 끊었다. 그리고 바르셀로나 숙소를 잡았다. 바르셀로나 하면 가우디가 유명해서 사그라다 파밀리아 성당 입장 티켓을 끊었다.</p>

<p>그리고 2월 5일, 드디어 떠나는 날이 다가왔다.</p>

<h2 id="출발">출발</h2>

<p><img src="/assets/images/travel/20200205_091425.jpg" alt="" class="align-center" /></p>

<p>2020년 1월 20일, 대한민국에서 첫 코로나 환자가 발생했다. 그때까지만 해도 그렇게 심해질 줄은 꿈에도 몰랐다. 전염성이 강하니 주의해야한다 정도였고 마스크도 잘 안쓰고 다녔다.
그런데 공항에 가니 그 여파를 느낄 수 있었다. 혹시나 사람이 많을까 싶어 평소에 쓰지도 않던 마스크도 단단히 쓰고 비닐 장갑까지 착용하고 공항으로 향했다. 그런데 막상 공항에 도착하니, 공항은 매우 한가했다. (사실 비수기라 그런지도 모르겠다.)
일찍 도착해서 여유롭게 체크인을 하고 수하물을 맡긴 뒤 비행기를 기다렸다.</p>

<h2 id="도착">도착</h2>

<p><img src="/assets/images/travel/KakaoTalk_Photo_2022-05-16-14-44-26.jpeg" alt="" class="align-center" /></p>

<p>지금 와서 보니 많은게 보인다! 자세히 보면 <strong>런던 아이</strong>도 보이고 <strong>타워 브릿지</strong>도 보인다. 런던 중심가가 한 번에 보인다!</p>

<p><img src="/assets/images/travel/KakaoTalk_Photo_2022-05-16-14-44-46.jpeg" alt="" class="align-center" /></p>

<p>처음엔 아무 생각 없이 찍은 사진인데 나중에 보니 북런던 지역이다! 비행기 날개 끝에 에미레이트 스타디움이 보인다. 참고로 나는 토트넘 팬이다. 아마 토트넘 핫스퍼 스타디움은 비행기 아래에 있을 것 같다. <del>아스날 망해라</del></p>

<p><img src="/assets/images/travel/20200205_152250.jpg" alt="" class="align-center" /></p>

<p>Paddington Station의 사진. 그냥 뭔가 있어보여서 찍어봤다. 여기서 숙소로 가는 지하철로 갈아탔다. 숙소 이름이 셜록 한인민박이었는데 알고보니 숙소가 Baker Street 근처에 있었다.</p>]]></content><author><name>BeomRam</name></author><category term="Travel" /><summary type="html"><![CDATA[나 홀로 떠난 유럽 여행]]></summary></entry><entry><title type="html">천문학개론2 - 태양 자전주기 구하기</title><link href="http://localhost:4000/astronomy/practice-day1/" rel="alternate" type="text/html" title="천문학개론2 - 태양 자전주기 구하기" /><published>2022-05-03T00:00:00+09:00</published><updated>2022-05-10T00:00:00+09:00</updated><id>http://localhost:4000/astronomy/practice-day1</id><content type="html" xml:base="http://localhost:4000/astronomy/practice-day1/"><![CDATA[<blockquote>
  <p>천문학개론2 강의에서 진행했던 실습을 개발자의 눈으로 복습해보자!<br />
원래의 실습에서는 태양의 자전 주기를 구하기 위한 계산식에 중점을 두지만, 이번 복습에서는 파이썬 코드를 통해 데이터를 읽고 처리하는 것에 중점을 두고자 한다.</p>
</blockquote>

<h2 id="1-개요">1. 개요</h2>

<p><strong>Helioviewer</strong>에서 <strong>PROBA-2 위성</strong>의 태양 관측 데이터를 파이썬 코드를 통해 처리한다.
처리한 데이터로 태양 표면 활동지역의 이동 속도를 구하고, 이를 이용하여 태양의 자전 주기를 구한다.</p>

<h2 id="2-modules">2. Modules</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">astropy.io.fits</span> <span class="k">as</span> <span class="n">fits</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
</code></pre></div></div>

<ul>
  <li><strong>numpy</strong>: 배열을 생성하고, 배열의 연산을 수행하는 모듈</li>
  <li><strong>astropy</strong>: 천문학 데이터를 읽고 처리하는 모듈
    <ul>
      <li><strong>fits</strong>: FITS 파일을 읽고 처리하는 모듈</li>
    </ul>
  </li>
  <li><strong>matplotlib</strong>: 데이터를 시각화해주는 모듈
    <ul>
      <li><strong>pyplot</strong>: 그래프를 그리는 모듈</li>
    </ul>
  </li>
</ul>

<h2 id="3-데이터-읽기">3. 데이터 읽기</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">image_data</span> <span class="o">=</span> <span class="n">fits</span><span class="p">.</span><span class="nb">open</span><span class="p">(</span><span class="s">'데이터 주소/데이터 이름.fits'</span><span class="p">)</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">image_data</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">data</span>
<span class="n">header</span> <span class="o">=</span> <span class="n">image_data</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">header</span>
</code></pre></div></div>

<p>앞에서 import한 astropy.io.fits 모듈을 사용하여 FITS 파일을 읽는다. FITS 파일은 header와 data로 구성되어 있다. header와 data를 각각의 변수에 저장한다.</p>

<p><em>image_data.info()</em> 코드를 실행하면 image_data의 정보가 출력된다.</p>

<h2 id="4-데이터-시각화">4. 데이터 시각화</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 이 코드는 다음 에러를 무시하기 위한 코드이다.
# RuntimeWarning: divide by zero encountered in log
</span><span class="n">np</span><span class="p">.</span><span class="n">seterr</span><span class="p">(</span><span class="n">divide</span><span class="o">=</span><span class="s">'ignore'</span><span class="p">)</span>

<span class="n">image</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">log</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">(</span><span class="n">data</span><span class="p">))</span>
<span class="c1"># 밝기 조절
</span><span class="n">max_value</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">percentile</span><span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
<span class="n">min_value</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">percentile</span><span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="mi">30</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">8</span><span class="p">))</span>
<span class="n">plt</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="s">'hot'</span><span class="p">,</span> <span class="n">origin</span><span class="o">=</span><span class="s">'lower'</span><span class="p">,</span>
<span class="n">vmax</span><span class="o">=</span><span class="n">max_value</span><span class="p">,</span> <span class="n">vmin</span><span class="o">=</span><span class="n">min_value</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
</code></pre></div></div>

<p><strong>np.array(data)</strong>를 사용하여 데이터를 배열로 변환한다. 이후 <strong>np.log</strong>를 사용하여 데이터를 로그로 변환한다. 천문학 데이터들은 스케일이 크기 때문에 로그 스케일로 변환하는게 좋다!
이제 numpy를 통해 필요한 데이터를 모두 처리했다.</p>

<p>본격적으로 matplotlib을 사용하여 데이터를 시각화해보자. <strong>plt.figure</strong>는 그래프 평면을 생성해준다. <strong>figsize</strong>로 그래프의 크기를 설정하자. <strong>plt.imshow</strong>는 그래프 평면 위에 데이터를 그리는 함수이다. 우리가 시각화 하고싶은 데이터인 <strong>image</strong>를 파라미터로 입력하자. 이후 데이터가 더 잘 보일 수 있게 하기 위해 <strong>cmap</strong>으로 색상을 결정한다. 그리고 <strong>vmax</strong>와 <strong>vmin</strong>을 통해 밝기의 최대값과 최솟값을 설정한다.</p>

<p>여기서 끝난다면 이미지 데이터는 상하반전이 된 채로 보일 것이다! 그 이유는 파이썬 배열의 특성에 있다. 파이썬 배열은 행렬 구조로 행은 위에서 아래로 진행하기 때문에 상하반전이 되는 것이다. 이를 해결하기 위해 <strong>origin=’lower’</strong>을 통해 우리가 아는 수학적, 물리적 좌표계로 전환해준다.</p>

<p>이제 <strong>plt.show</strong>를 실행하여 이미지를 console에 출력해보자!
<img src="/assets/images/astro_solar.png" alt="" class="align-center" />
다음과 같은 그래프가 출력된다면 성공이다!</p>

<h2 id="5-데이터-활용">5. 데이터 활용</h2>

<p>이제 관측 시간이 다른 2개 이상의 데이터를 사용하여 그래프를 출력한 뒤, 태양 표면 활동지역의 이동속도를 구하면 태양의 자전주기를 구할 수 있다!</p>

<blockquote>
  <p>태양 자전주기 = 2π × (태양 R) / (태양 표면 활동지역의 ⱱ)</p>
</blockquote>]]></content><author><name>BeomRam</name></author><category term="Astronomy" /><summary type="html"><![CDATA[태양 표면의 활동지역을 이용하여 태양의 자전 주기를 구해보자.]]></summary></entry><entry><title type="html">Github blog의 첫 시작</title><link href="http://localhost:4000/blog/first-post/" rel="alternate" type="text/html" title="Github blog의 첫 시작" /><published>2022-04-27T00:00:00+09:00</published><updated>2022-04-27T00:00:00+09:00</updated><id>http://localhost:4000/blog/first-post</id><content type="html" xml:base="http://localhost:4000/blog/first-post/"><![CDATA[<p>우주과학과에 들어와서 별로 흥미를 느끼지 못하고 열심히 놀기만 했다.</p>

<p>코딩을 접하며 코딩 뿐만 아니라 천문학, 우주과학에도 관심을 가지기 시작했다!</p>

<p>이 글, 이 블로그와 함께 첫 발을 내딛어보자!</p>]]></content><author><name>BeomRam</name></author><category term="Blog" /><summary type="html"><![CDATA[지금까지 해온 공부, 지금부터 시작할 공부를 기록하기 위해 시작합니다!]]></summary></entry></feed>